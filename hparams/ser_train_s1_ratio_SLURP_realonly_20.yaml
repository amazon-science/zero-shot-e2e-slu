# ############################################################################
# Model: Direct SLU
# Encoder: Pre-trained wav2vec2 -> LSTM
# Decoder: GRU + beamsearch
# Tokens: BPE with unigram
# losses: NLL
# Training: SLURP
# Authors:  Loren Lugosch, Mirco Ravanelli 2020 Boumadane Abdelmoumene, AbdelWahab Heba, Yingzhi Wang 2021
# For more wav2vec2/HuBERT results, please see https://arxiv.org/pdf/2111.02735.pdf
# ############################################################################

# Seed needs to be set at top of yaml, before objects with parameters are made
project_folder: /home/ec2-user/efs/users/jianfhe/zscr
peoplespeech_data_folder: /home/ec2-user/efs/users/jianfhe/datasets/peoplespeech # !PLACEHOLDER # e,g./path/to/LibriSpeech
slurp_data_folder: /home/ec2-user/efs/users/jianfhe/datasets/SLURP


data_name: "slurp"
mid_syn_label_file: "inference_syn_label.jsonl"

seed: 19816 # a process to train S1 in 100%
slu_remain_train_ratio: 20 # 100 80 60 40 20
__set_seed: !apply:torch.manual_seed [!ref <seed>]
freeze_folder: !ref processed_data/<data_name>
output_folder: !ref results/<seed>/<data_name>
save_folder: !ref <output_folder>/save
train_log: !ref <output_folder>/train_log.txt

# Data files
# The SLURP dataset will be automatically downloaded in the specified data_folder
data_folder: !ref <project_folder>/datasets/SLURP # !<PLACEHOLDER> # e.g, /localscratch/SLURP
data_folder_rirs: !ref <data_folder>
train_splits: ["train_real"]
csv_train: !ref <freeze_folder>/train-type=direct.csv
csv_valid: !ref <freeze_folder>/devel-type=direct.csv
csv_test: !ref <freeze_folder>/test-type=direct.csv
tokenizer_file: speechbrain/SLU-direct-SLURP-hubert-enc
skip_prep: True
operate_divide_csv_train: False # should be fixed in all baselines
divide_csv_train: True
split_ratio: "0.45 0.9 1.0" # "None"

# below three csv are splited from csv_train
invs_csv_train: !ref <freeze_folder>/invs-train-type=direct.csv
vs_csv_train: !ref <freeze_folder>/vs-train-type=direct.csv
fine_turn_csv: !ref <freeze_folder>/fine-tune-type=direct.csv  # only useful when split_ratio != "None"

# below three csv are splited from invs_csv_train
tr_invs_csv_train: !ref <output_folder>/tr_sel_aux_wi_syn_label.csv
dev_invs_csv_train: !ref <output_folder>/dev_sel_aux_wi_syn_label.csv
te_invs_csv_train: !ref <output_folder>/te_sel_aux_wi_syn_label.csv
div_invs_csv_train_ratio: "0.8 0.9 1.0" # should keep fixed as "train_S3 in other experiments"

# URL for the wav2vec2 model, you can change to benchmark diffrenet models
wav2vec2_hub: "facebook/hubert-base-ls960"

# Training parameters
small_set: False
number_of_epochs: 35 # 35
batch_size: 4 # 6
lr: 0.0003
lr_wav2vec2: 0.00001
token_type: unigram # ["unigram", "bpe", "char"]
sorting: random
ckpt_interval_minutes: 15 # save checkpoint every N min

#freeze all wav2vec2
freeze_wav2vec2: False

#set to true to freeze the CONV part of the wav2vec2 model # might be not useful
freeze_wav2vec2_conv: True

# Model parameters
sample_rate: 16000
emb_size: 128
dec_neurons: 512
output_neurons: 58 # index(eos/bos) = 0
encoder_dim: 768

# Decoding parameters
bos_index: 0
eos_index: 0
min_decode_ratio: 0.0
max_decode_ratio: 10.0
slu_beam_size: 80
eos_threshold: 1.5
temperature: 1.25

dataloader_opts:
    batch_size: !ref <batch_size>
    shuffle: True

epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
    limit: !ref <number_of_epochs>

# Models
wav2vec2: !new:speechbrain.lobes.models.huggingface_wav2vec.HuggingFaceWav2Vec2
    source: !ref <wav2vec2_hub>
    output_norm: True
    freeze: !ref <freeze_wav2vec2>
    save_path: !ref <save_folder>/wav2vec2_checkpoint

output_emb: !new:speechbrain.nnet.embedding.Embedding
    num_embeddings: !ref <output_neurons>
    embedding_dim: !ref <emb_size>

dec: !new:speechbrain.nnet.RNN.AttentionalRNNDecoder
    enc_dim: !ref <encoder_dim>
    input_size: !ref <emb_size>
    rnn_type: lstm
    attn_type: content
    hidden_size: !ref <dec_neurons>
    attn_dim: 512
    num_layers: 3
    scaling: 1.0
    dropout: 0.0

seq_lin: !new:speechbrain.nnet.linear.Linear
    input_size: !ref <dec_neurons>
    n_neurons: !ref <output_neurons>

augmentation: !new:speechbrain.lobes.augment.TimeDomainSpecAugment
    sample_rate: !ref <sample_rate>
    speeds: [95, 100, 105]

modules:
    wav2vec2: !ref <wav2vec2>
    output_emb: !ref <output_emb>
    dec: !ref <dec>
    seq_lin: !ref <seq_lin>

model: !new:torch.nn.ModuleList
    - [!ref <output_emb>,
       !ref <dec>, !ref <seq_lin>]

tokenizer: !new:sentencepiece.SentencePieceProcessor

pretrainer: !new:speechbrain.utils.parameter_transfer.Pretrainer
    collect_in: !ref <save_folder>/SLURP_tokenizer
    loadables:
        tokenizer: !ref <tokenizer>
    paths:
        tokenizer: !ref <tokenizer_file>/tokenizer_58_unigram.model

beam_searcher: !new:speechbrain.decoders.S2SRNNBeamSearcher
    embedding: !ref <output_emb>
    decoder: !ref <dec>
    linear: !ref <seq_lin>
    bos_index: !ref <bos_index>
    eos_index: !ref <eos_index>
    min_decode_ratio: !ref <min_decode_ratio>
    max_decode_ratio: !ref <max_decode_ratio>
    beam_size: !ref <slu_beam_size>
    eos_threshold: !ref <eos_threshold>
    temperature: !ref <temperature>
    using_max_attn_shift: False
    max_attn_shift: 30
    coverage_penalty: 0.

opt_class: !name:torch.optim.Adam
    lr: !ref <lr>

wav2vec2_opt_class: !name:torch.optim.Adam
    lr: !ref <lr_wav2vec2>

lr_annealing: !new:speechbrain.nnet.schedulers.NewBobScheduler
    initial_value: !ref <lr>
    improvement_threshold: 0.0025
    annealing_factor: 0.8
    patient: 0

lr_annealing_wav2vec2: !new:speechbrain.nnet.schedulers.NewBobScheduler
    initial_value: !ref <lr_wav2vec2>
    improvement_threshold: 0.0025
    annealing_factor: 0.9

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
    checkpoints_dir: !ref <save_folder>/direct
    recoverables:
        model: !ref <model>
        wav2vec2: !ref <wav2vec2>
        scheduler: !ref <lr_annealing>
        lr_annealing_wav2vec2: !ref <lr_annealing_wav2vec2>
        counter: !ref <epoch_counter>

log_softmax: !new:speechbrain.nnet.activations.Softmax
    apply_log: True

seq_cost: !name:speechbrain.nnet.losses.nll_loss
    label_smoothing: 0.1

train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
    save_file: !ref <train_log>

error_rate_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats

cer_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats
    split_tokens: True


### customized
retrain_s1: True
cal_gb_infer: True
filter_res_by_text_similary_dir: !ref <output_folder>/<data_name>_s1
gb_infer_res: gb_inference.jsonl

